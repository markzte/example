=============================================zookeeper leader选举
Curator 有两种选举recipe， 你可以根据你的需求选择合适的。
Recipes包里面提供了Leader选举实现，Spark中的master选举使用的就是reciples包里面的LeaderLatch，使用他们可以极大的简化代码，使你
将注意力更多的放在核心业务逻辑上。Leader选举的实现在org.apache.curator.framework.recipes.leader包中，这个包提供了两组Leader选
举：
  1.LeaderLatch,LeaderLatchListener
  2.LeaderSelector,LeaderSelectorListener,LeaderSelectorListenerAdapter

【Leader latch】 Spark中用这个
一旦不使用LeaderLatch了，必须调用close方法。 如果它是leader,会释放leadership， 其它的参与者将会选举一个leader。
异常处理
LeaderLatch实例可以增加ConnectionStateListener来监听网络连接问题。 当 SUSPENDED 或 LOST 时, leader不再认为自己还是leader.当
LOST 连接重连后 RECONNECTED,LeaderLatch会删除先前的ZNode然后重新创建一个.
LeaderLatch用户必须考虑导致leadershi丢失的连接问题。 强烈推荐你使用ConnectionStateListener。

【Leader Selector】****（官方推荐用这个）
与LeaderLatch， 通过LeaderSelectorListener可以对领导权进行控制， 在适当的时候释放领导权，这样每个节点都有可能获得领导权。 而
LeaderLatch一根筋到死， 除非调用close方法，否则它不会释放领导权。
